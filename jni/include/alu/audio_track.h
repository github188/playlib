// Generated by Neo

#ifndef _AUDIO_TRACK_H_
#define _AUDIO_TRACK_H_

#include <jni.h>
#include <pthread.h>

#include <alu/jutils_types.h>

class AudioTrackBody;

class AudioTrack {
public:
	AudioTrack();
	~AudioTrack();

	static bool init(JavaVM* vm);
	static void deinit();

	bool start(SampleRate rate, ChannelConfig channel, PCMBit bit, report cb,
			bool is_stream_source = false);
	bool pause();
	bool resume();
	bool stop();
	bool fin();

	int left();
	bool set_volume(float gain);
	bool is_working();
	bool append(const unsigned char* data, size_t size, uint64_t ts = 0ULL);

private:
	AudioTrackBody* body_;

	bool is_paused();
	void set_paused(bool paused);

	DISALLOW_COPY_AND_ASSIGN(AudioTrack);
};

#endif /* _AUDIO_TRACK_H_ */
